[[package]]
name = "aia-utils"
version = "0.3.2"
description = ""
category = "main"
optional = false
python-versions = "<4.0,>=3.11"

[package.dependencies]
confluent-kafka = ">=2.3.0,<3.0.0"
coverage = ">=7.3.2,<8.0.0"
html2image = ">=2.0.4,<3.0.0"
paho-mqtt = ">=2.1.0,<3.0.0"
pillow = ">=10.2.0,<11.0.0"
pymongo = ">=4.6.1,<5.0.0"
PyYAML = ">=6.0.1,<7.0.0"
requests = ">=2.32.3,<3.0.0"
tomli = ">=2.0.1,<3.0.0"

[[package]]
name = "certifi"
version = "2024.7.4"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "3.3.2"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7.0"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "confluent-kafka"
version = "2.5.0"
description = "Confluent's Python client for Apache Kafka"
category = "main"
optional = false
python-versions = "*"

[package.extras]
avro = ["avro (>=1.11.1,<2)", "requests", "fastavro (>=0.23.0,<1.0)", "fastavro (>=1.0)"]
dev = ["pytest-timeout", "flake8", "avro (>=1.11.1,<2)", "requests", "pytest (==4.6.4)", "fastavro (>=0.23.0,<1.0)", "fastavro (>=1.0)", "pytest"]
doc = ["sphinx", "sphinx-rtd-theme", "avro (>=1.11.1,<2)", "requests", "fastavro (>=0.23.0,<1.0)", "fastavro (>=1.0)"]
json = ["jsonschema", "requests", "pyrsistent (==0.16.1)", "pyrsistent"]
protobuf = ["protobuf", "requests"]
schema-registry = ["requests"]

[[package]]
name = "coverage"
version = "7.6.1"
description = "Code coverage measurement for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
toml = ["tomli"]

[[package]]
name = "dnspython"
version = "2.6.1"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "mypy (>=1.8)", "pylint (>=3)", "pytest-cov (>=4.1.0)", "pytest (>=7.4)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]
dnssec = ["cryptography (>=41)"]
doh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]
doq = ["aioquic (>=0.9.25)"]
idna = ["idna (>=3.6)"]
trio = ["trio (>=0.23)"]
wmi = ["wmi (>=1.5.1)"]

[[package]]
name = "html2image"
version = "2.0.4.3"
description = "Package acting as a wrapper around the headless mode of existing web browsers to generate images from URLs and from HTML+CSS strings or files."
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
requests = "*"
websocket-client = ">=1.0.0,<2.0.0"

[[package]]
name = "idna"
version = "3.7"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imageio"
version = "2.35.0"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = "<2.0.0"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx (<6)", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "itk", "numpy (>2)", "numpydoc", "pillow-heif", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "rawpy", "sphinx (<6)", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
pillow-heif = ["pillow-heif"]
pyav = ["av"]
rawpy = ["rawpy", "numpy (>2)"]
test = ["pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "iniconfig"
version = "2.0.0"
description = "brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lazy-loader"
version = "0.4"
description = "Makes it easy to load subpackages and functions on demand."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
dev = ["changelist (==0.5)"]
lint = ["pre-commit (==3.7.0)"]
test = ["pytest (>=7.4)", "pytest-cov (>=4.1)"]

[[package]]
name = "networkx"
version = "3.3"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.10"

[package.extras]
default = ["numpy (>=1.23)", "scipy (>=1.9,!=1.11.0,!=1.11.1)", "matplotlib (>=3.6)", "pandas (>=1.4)"]
developer = ["changelist (==0.5)", "pre-commit (>=3.2)", "mypy (>=1.1)", "rtoml"]
doc = ["sphinx (>=7)", "pydata-sphinx-theme (>=0.14)", "sphinx-gallery (>=0.14)", "numpydoc (>=1.7)", "pillow (>=9.4)", "texext (>=0.6.7)", "myst-nb (>=1.0)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.12)", "pydot (>=2.0)", "sympy (>=1.10)"]
test = ["pytest (>=7.2)", "pytest-cov (>=4.0)"]

[[package]]
name = "numpy"
version = "1.26.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "packaging"
version = "24.1"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "paho-mqtt"
version = "2.1.0"
description = "MQTT version 5.0/3.1.1 client class"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
proxy = ["pysocks"]

[[package]]
name = "pillow"
version = "10.4.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=7.3)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "pluggy"
version = "1.5.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pymongo"
version = "4.8.0"
description = "Python driver for MongoDB <http://www.mongodb.org>"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dnspython = ">=1.16.0,<3.0.0"

[package.extras]
aws = ["pymongo-auth-aws (>=1.1.0,<2.0.0)"]
docs = ["furo (==2023.9.10)", "readthedocs-sphinx-search (>=0.3,<1.0)", "sphinx-rtd-theme (>=2,<3)", "sphinx (>=5.3,<8)", "sphinxcontrib-shellcheck (>=1,<2)"]
encryption = ["certifi", "pymongo-auth-aws (>=1.1.0,<2.0.0)", "pymongocrypt (>=1.6.0,<2.0.0)"]
gssapi = ["pykerberos", "winkerberos (>=0.5.0)"]
ocsp = ["certifi", "cryptography (>=2.5)", "pyopenssl (>=17.2.0)", "requests (<3.0.0)", "service-identity (>=18.1.0)"]
snappy = ["python-snappy"]
test = ["pytest (>=7)"]
zstd = ["zstandard"]

[[package]]
name = "pytest"
version = "7.4.4"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"

[package.extras]
testing = ["argcomplete", "attrs (>=19.2.0)", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "setuptools", "xmlschema"]

[[package]]
name = "pytest-cov"
version = "4.1.0"
description = "Pytest plugin for measuring coverage."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
coverage = {version = ">=5.2.1", extras = ["toml"]}
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests", "six", "pytest-xdist", "virtualenv"]

[[package]]
name = "pytest-dotenv"
version = "0.5.2"
description = "A py.test plugin that parses environment files before running tests"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
pytest = ">=5.0.0"
python-dotenv = ">=0.9.1"

[[package]]
name = "python-dotenv"
version = "1.0.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "requests"
version = "2.32.3"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "scikit-image"
version = "0.22.0"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
imageio = ">=2.27"
lazy_loader = ">=0.3"
networkx = ">=2.8"
numpy = ">=1.22"
packaging = ">=21"
pillow = ">=9.0.1"
scipy = ">=1.8"
tifffile = ">=2022.8.12"

[package.extras]
build = ["meson-python (>=0.14)", "wheel", "setuptools (>=67)", "packaging (>=21)", "ninja", "Cython (>=0.29.32)", "pythran", "numpy (>=1.22)", "spin (==0.6)", "build"]
data = ["pooch (>=1.6.0)"]
developer = ["pre-commit", "tomli"]
docs = ["sphinx (>=7.2)", "sphinx-gallery (>=0.14)", "numpydoc (>=1.6)", "sphinx-copybutton", "pytest-runner", "matplotlib (>=3.5)", "dask[array] (>=2022.9.2)", "pandas (>=1.5)", "seaborn (>=0.11)", "pooch (>=1.6)", "tifffile (>=2022.8.12)", "myst-parser", "ipywidgets", "ipykernel", "plotly (>=5.10)", "kaleido", "scikit-learn (>=1.1)", "sphinx_design (>=0.5)", "pydata-sphinx-theme (>=0.14.1)", "PyWavelets (>=1.1.1)"]
optional = ["simpleitk", "astropy (>=5.0)", "cloudpickle (>=0.2.1)", "dask[array] (>=2021.1.0)", "matplotlib (>=3.5)", "pooch (>=1.6.0)", "pyamg", "PyWavelets (>=1.1.1)", "scikit-learn (>=1.1)"]
test = ["asv", "matplotlib (>=3.5)", "numpydoc (>=1.5)", "pooch (>=1.6.0)", "pytest (>=7.0)", "pytest-cov (>=2.11.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scipy"
version = "1.14.0"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
numpy = ">=1.23.5,<2.3"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-timeout", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack", "pooch", "hypothesis (>=6.30)", "array-api-strict", "cython", "meson", "ninja"]
doc = ["sphinx (>=5.0.0)", "pydata-sphinx-theme (>=0.15.2)", "sphinx-design (>=0.4.0)", "matplotlib (>=3.5)", "numpydoc", "jupytext", "myst-nb", "pooch", "jupyterlite-sphinx (>=0.13.1)", "jupyterlite-pyodide-kernel"]
dev = ["mypy (==1.10.0)", "typing-extensions", "types-psutil", "pycodestyle", "ruff (>=0.0.292)", "cython-lint (>=0.12.2)", "rich-click", "doit (>=0.36.0)", "pydevtool"]

[[package]]
name = "tifffile"
version = "2024.8.10"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = "*"

[package.extras]
all = ["imagecodecs (>=2023.8.12)", "matplotlib", "defusedxml", "lxml", "zarr", "fsspec"]
codecs = ["imagecodecs (>=2023.8.12)"]
plot = ["matplotlib"]
test = ["pytest", "imagecodecs", "czifile", "cmapfile", "oiffile", "lfdfiles", "psdtags", "roifile", "lxml", "zarr", "dask", "xarray", "fsspec", "defusedxml", "ndtiff"]
xml = ["defusedxml", "lxml"]
zarr = ["zarr", "fsspec"]

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "2.2.2"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "websocket-client"
version = "1.8.0"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
docs = ["Sphinx (>=6.0)", "sphinx-rtd-theme (>=1.1.0)", "myst-parser (>=2.0.0)"]
optional = ["python-socks", "wsaccel"]
test = ["websockets"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.11.2,<3.12"
content-hash = "aa9e05d3d623c49c717b9a3ac428a06bb2478a15714d8d553ff64fccbbcb91f8"

[metadata.files]
aia-utils = []
certifi = []
charset-normalizer = []
colorama = []
confluent-kafka = []
coverage = []
dnspython = []
html2image = []
idna = []
imageio = []
iniconfig = []
lazy-loader = []
networkx = []
numpy = []
packaging = []
paho-mqtt = []
pillow = []
pluggy = []
pymongo = []
pytest = []
pytest-cov = []
pytest-dotenv = []
python-dotenv = []
pyyaml = []
requests = []
scikit-image = []
scipy = []
tifffile = []
tomli = []
urllib3 = []
websocket-client = []
